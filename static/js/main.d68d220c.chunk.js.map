{"version":3,"sources":["components/common/Nav.js","components/common/Table.js","components/common/SecondaryTable.js","components/common/DetailSection.js","components/PageContainer.js","pageConfigs.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","pages","to","className","map","name","url","BasicTable","primaryData","secondaryData","setDetails","isWarehouse","warehouseId","console","log","fieldId","fieldName","title","columns","field","width","render","rowData","id","factoryId","warehouseName","warehouseAddress","warehouseDescription","factoryName","factoryAddress","factoryDescription","addressData","buildingName","streetLine1","streetLine2","city","stateProvince","zipPostalCode","country","address","description","cityStateCountry","placement","arrow","fontSize","data","options","pageSize","onRowClick","event","document","secondaryDetail","stopPropagation","icons","Clear","forwardRef","props","ref","Search","ResetSearch","FirstPage","LastPage","NextPage","PreviousPage","SortArrow","SecondaryTable","DetailSection","primaryDetail","PageContainer","useState","setPrimaryDetail","setSecondaryDetail","newPrimaryDetail","newSecondaryDetail","warehouses","require","factories","pageConfigs","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d68d220c.chunk.js","sourcesContent":["import '../../App.css';\nimport { Link } from 'react-router-dom';\n\nfunction Nav({ pages }) {\n  return (\n    <nav>\n      <Link to=\"/warehouses\">\n        <h3>Vandelay</h3>\n      </Link>\n      <ul className=\"nav-links\">\n        {pages.map(({ name, url }) => <Link to={url} key={name}><li>{name}</li></Link>)}\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import { forwardRef } from 'react';\nimport MaterialTable from \"material-table\";\nimport SearchIcon from '@mui/icons-material/Search';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\nimport ToolTip from '@mui/material/Tooltip';\n\nexport default function BasicTable({ primaryData, secondaryData, name, setDetails }) {\n  const isWarehouse = primaryData[0].warehouseId || primaryData[0].warehouseId === 0\n  console.log({isWarehouse, primaryData})\n  const fieldId = isWarehouse ? 'warehouseId' : 'factoryId'\n  const fieldName = isWarehouse ? 'warehouseName' : 'factoryName'\n\n  return (\n      <div className='table-container'>\n        <MaterialTable\n          title={name}\n          columns={[\n            {\n              title: \"ID\",\n              field: fieldId,\n              width: \"15%\",\n              render: rowData => {\n                const id = isWarehouse ? rowData.warehouseId : rowData.factoryId\n                return (\n                  <div>\n                    <div>{id}</div>\n                  </div>)\n              }\n            },\n            {\n              title: \"Name\",\n              field: fieldName,\n              width: \"85%\",\n              render: rowData => {\n                const { warehouseName, warehouseAddress, warehouseDescription, factoryName, factoryAddress, factoryDescription } = rowData\n                const addressData = warehouseAddress || factoryAddress\n                const { buildingName, streetLine1, streetLine2, city, stateProvince, zipPostalCode, country } = addressData\n                const name = warehouseName || factoryName\n                const address = `${buildingName} ${streetLine1}${streetLine2 ? ` ${streetLine2}` : ''}`\n                const description = warehouseDescription || factoryDescription\n                const cityStateCountry = `${city}, ${stateProvince} ${zipPostalCode} ${country}`\n                return (\n                  <div>\n                    <div>\n                      <span>{name}</span>\n                      <ToolTip title={description} placement=\"right-start\" arrow>\n                        <InfoOutlinedIcon fontSize=\"small\" className=\"info-icon\" />\n                      </ToolTip>\n                    </div>\n                    <div className=\"fs-p75 secondary\">\n                      <div>{address}</div>\n                      <div>{cityStateCountry}</div>\n                    </div>\n                  </div>)\n              }\n            }\n          ]}\n          data={primaryData}\n          options={{ pageSize: 10 }}\n          onRowClick={(event, rowData) => {\n            console.log(document, event)\n            // Get your id from rowData and use with link.\n            const secondaryDetail = secondaryData[rowData[fieldId]]\n            setDetails(rowData, secondaryDetail)\n            console.log(rowData.warehouseId)\n            event.stopPropagation();\n          }}\n          icons={{\n            Clear: forwardRef((props, ref) => <ClearIcon {...props} ref={ref} />),\n            Search: forwardRef((props, ref) => <SearchIcon {...props} ref={ref} />),\n            ResetSearch: forwardRef((props, ref) => <ClearIcon {...props} ref={ref} />),\n            FirstPage: forwardRef((props, ref) => <FirstPageIcon {...props} ref={ref} />),\n            LastPage: forwardRef((props, ref) => <LastPageIcon {...props} ref={ref} />),\n            NextPage: forwardRef((props, ref) => <ArrowForwardIosIcon {...props} ref={ref} />),\n            PreviousPage: forwardRef((props, ref) => <ArrowBackIosIcon {...props} ref={ref} />),\n            SortArrow: forwardRef((props, ref) => <KeyboardArrowDownIcon {...props} ref={ref} />),\n          }}\n        />\n      </div>\n  );\n}\n\n","import { forwardRef } from 'react';\nimport MaterialTable from \"material-table\";\nimport SearchIcon from '@mui/icons-material/Search';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport LastPageIcon from '@mui/icons-material/LastPage';\n\nexport default function SecondaryTable({ secondaryDetail }) {\n  \n  console.log({secondaryDetail})\n  const isWarehouse = secondaryDetail[0].warehouseId || secondaryDetail[0].warehouseId === 0\n  const title = isWarehouse ? 'INVENTORY ITEMS' : 'MACHINES'\n\n  let columns = []\n  if (isWarehouse) {\n    columns = [\n      {\n        title: \"ID\",\n        field: \"itemId\",\n        width: \"12%\"\n      },\n      {\n        title: \"SKU\",\n        field: \"itemSKU\",\n        width: \"15%\"\n      },\n      {\n        title: \"QUANTITY\",\n        field: \"itemQuantity\",\n        width: \"15%\"\n      },\n      {\n        title: \"NAME\",\n        field: \"itemName\",\n        width: \"18%\"\n      },\n      {\n        title: \"DESCRIPTION\",\n        field: \"itemDescription\",\n        width: \"40%\"\n      }\n    ]\n  } else {\n    columns = [\n      {\n        title: \"ID\",\n        field: \"machineId\",\n        width: \"15%\"\n      },\n      {\n        title: \"NAME\",\n        field: \"machineName\",\n        width: \"15%\",\n      },\n      {\n        title: \"DESCRIPTION\",\n        field: \"machineDescription\",\n        width: \"70%\"\n      }\n    ]\n  }\n  return (\n      <div className=\"m-1 secondary-table\">\n        <MaterialTable\n          title={title}\n          columns={columns}\n          data={ secondaryDetail }\n          options={{ pageSize: 5 }}\n          icons={{\n            Clear: forwardRef((props, ref) => <ClearIcon {...props} ref={ref} />),\n            Search: forwardRef((props, ref) => <SearchIcon {...props} ref={ref} />),\n            ResetSearch: forwardRef((props, ref) => <ClearIcon {...props} ref={ref} />),\n            FirstPage: forwardRef((props, ref) => <FirstPageIcon {...props} ref={ref} />),\n            LastPage: forwardRef((props, ref) => <LastPageIcon {...props} ref={ref} />),\n            NextPage: forwardRef((props, ref) => <ArrowForwardIosIcon {...props} ref={ref} />),\n            PreviousPage: forwardRef((props, ref) => <ArrowBackIosIcon {...props} ref={ref} />),\n            SortArrow: forwardRef((props, ref) => <KeyboardArrowDownIcon {...props} ref={ref} />),\n          }}\n        />\n      </div>\n  );\n}","import '../../App.css';\nimport SecondaryTable from './SecondaryTable';\n\nfunction DetailSection({ primaryDetail, secondaryDetail }) {\n  const { warehouseName, warehouseAddress, warehouseDescription, factoryName, factoryAddress, factoryDescription } = primaryDetail\n  const addressData = warehouseAddress || factoryAddress\n  const { buildingName, streetLine1, streetLine2, city, stateProvince, zipPostalCode, country } = addressData\n  const name = warehouseName || factoryName\n  const address = `${streetLine1}${streetLine2 ? ` ${streetLine2}` : ''}`\n  const cityStateCountry = `${city}, ${stateProvince} ${zipPostalCode} ${country}`\n  const description = warehouseDescription || factoryDescription\n  console.log({primaryDetail})\n\n  return (\n    <section className=\"detail-section flex-column-center\">\n      <h2>{name}</h2>\n      <b>{buildingName}</b>\n      <span>{address}</span>\n      <span>{cityStateCountry}</span>\n      <span className=\"m-1\">{description}</span>\n      <SecondaryTable secondaryDetail={secondaryDetail} />\n    </section>\n  );\n}\n\nexport default DetailSection;\n","import '../App.css';\nimport Table from './common/Table';\nimport DetailSection from './common/DetailSection';\nimport { useState } from 'react';\n\nfunction PageContainer({ name, primaryData, secondaryData }) {\n  const [primaryDetail, setPrimaryDetail] = useState(primaryData[0])\n  const [secondaryDetail, setSecondaryDetail] = useState(secondaryData[\"0\"])\n\n  function setDetails (newPrimaryDetail, newSecondaryDetail) {\n    setSecondaryDetail(newSecondaryDetail)\n    setPrimaryDetail(newPrimaryDetail)\n  }\n  return (\n    <div className=\"display-flex\">\n      <Table primaryData={primaryData} secondaryData={secondaryData} name={name} setDetails={setDetails} />\n      <DetailSection className=\"detail-section\" primaryDetail={primaryDetail} secondaryDetail={secondaryDetail} />\n    </div>\n  );\n}\n\nexport default PageContainer;\n","const warehouses = require('./mockData/warhouses.json')\nconst factories = require('./mockData/factories.json')\nconst inventory = require('./mockData/inventory.json')\nconst machines = require('./mockData/machines.json')\n\nconst pageConfigs = [\n    {\n        name: 'Warehouses',\n        url: '/warehouses',\n        primaryData: warehouses,\n        secondaryData: inventory\n    },\n    {\n        name: 'Factories',\n        url: '/factories',\n        primaryData: factories,\n        secondaryData: machines\n    }\n]\n\nexport default pageConfigs","import './App.css';\nimport Nav from './components/common/Nav';\nimport PageContainer from './components/PageContainer'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport pageConfigs from './pageConfigs';\n\nfunction App() {\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Nav pages={pageConfigs} />\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to=\"/warehouses\" />\n          </Route>\n          {pageConfigs.map(({ name, url, primaryData, secondaryData }) => (\n            <Route\n              key={name} \n              path={url} \n              render={props => <PageContainer { ...props } name={name} url={url} primaryData={primaryData} secondaryData={secondaryData} />}\n            />))}\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}