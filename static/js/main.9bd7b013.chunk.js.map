{"version":3,"sources":["components/Nav.js","components/PrimaryTable.js","redux/actions/index.js","components/SecondaryTable.js","components/DetailSection.js","components/PageContainer.js","pageConfigs.js","redux/reducers/allWarehouses.js","redux/reducers/allFactories.js","redux/reducers/allInventory.js","redux/reducers/allMachines.js","redux/reducers/factoryDetail.js","redux/reducers/warehouseDetail.js","redux/reducers/inventoryDetail.js","redux/reducers/machineDetail.js","redux/reducers/activeDetailClass.js","redux/reducers/index.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","pages","addClickedClass","e","prevActiveEl","document","querySelector","classList","remove","linkEl","target","contains","getElementById","add","onClick","className","to","map","type","url","id","toLowerCase","toUpperCase","PrimaryTable","isWarehouse","dispatch","useDispatch","primaryData","useSelector","state","allWarehousesReducer","allFactoriesReducer","secondaryData","allInventoryReducer","allMachinesReducer","fieldId","fieldName","useEffect","tableHeaderSpacingEl","searchInputEl","class","title","columns","field","width","render","rowData","warehouseId","factoryId","warehouseName","warehouseAddress","warehouseDescription","factoryName","factoryAddress","factoryDescription","addressData","streetLine1","streetLine2","city","stateProvince","zipPostalCode","country","name","address","description","cityStateCountry","placement","arrow","fontSize","data","options","pageSize","onRowClick","event","rowId","tableData","payload","setWarehouseDetail","setInventoryDetail","setFactoryDetail","setMachineDetail","stopPropagation","icons","Clear","forwardRef","props","ref","Search","ResetSearch","FirstPage","LastPage","NextPage","PreviousPage","SortArrow","SecondaryTable","inputFields","primaryId","useState","openDeleteModal","setOpenDeleteModal","openEditModal","setOpenEditModal","openAddModal","setOpenAddModal","openSnackBar","setOpenSnackBar","snackBarMessage","setSnackBarMessage","editData","setEditData","secondaryDetail","inventoryDetailReducer","machineDetailReducer","primaryIdKey","secondaryIdKey","secondaryNameKey","handleClickOpen","actionType","handleClose","isCancel","handleCloseSnackBar","dataKey","dataType","label","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","severity","Dialog","DialogTitle","DialogContent","TextField","margin","fullWidth","variant","DialogActions","Button","inputs","parentNode","querySelectorAll","newFields","forEach","input","dataset","key","value","addObj","addItem","itemName","itemId","addMachine","machineName","machineId","DialogContentText","secondaryId","deleteItem","deleteMachine","autoFocus","defaultValue","originalIds","originalPrimaryId","originalSecondaryId","editObj","editItem","editMachine","localization","header","actions","icon","tooltip","isFreeAction","Add","Delete","Edit","DetailSection","primaryDetail","warehouseDetailReducer","factoryDetailReducer","activeDetailClass","activeDetailClassReducer","buildingName","PageContainer","pageConfigs","warehouses","require","action","factories","inventory","newAllInventory","itemIndex","findIndex","item","newInventoryDetail","inventoryDetail","filter","machines","machineDetail","newMachineDetail","newState","allReducers","combineReducers","App","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.9bd7b013.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\n\nfunction Nav({ pages }) {\n  const addClickedClass = e => {\n\n    // Remove active class from previously active link\n    const prevActiveEl = document.querySelector('.active-link')\n    if (prevActiveEl) {\n      prevActiveEl.classList.remove('active-link')\n    }\n    const linkEl = e.target\n\n    // When clicking on Logo, set active class to Warehouses link\n    if (linkEl.classList.contains(\"logo-link\")) {\n      const warehousesLink = document.getElementById('warehouses-link')\n      warehousesLink.classList.add('active-link')\n    } else {\n      // Add active class to clicked link\n      linkEl.classList.add('active-link')\n    }\n  }\n\n  return (\n    <nav>\n      <Link onClick={addClickedClass} className=\"logo-link\" to=\"/vandelay/warehouses\">\n        <h3 className=\"logo-link\">VANDELAY</h3>\n      </Link>\n      <ul className=\"nav-links\">\n        {pages.map(({ type, url }) => <Link to={url} onClick={addClickedClass} key={type} className={type === 'Warehouses'? 'active-link' : ''} id={`${type.toLowerCase()}-link`}><li>{type.toUpperCase()}</li></Link>)}\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import { forwardRef, useEffect} from 'react';\nimport MaterialTable from \"material-table\";\nimport SearchIcon from '@mui/icons-material/Search';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\nimport ToolTip from '@mui/material/Tooltip';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFactoryDetail, setWarehouseDetail, setInventoryDetail, setMachineDetail, setActiveDetailClass } from '../redux/actions'\n\n// Primary table is displayed as a side bar on larger screens\n// Primary Data is either Warehouse data or Factory data\nexport default function PrimaryTable({ type }) {\n  const isWarehouse = type === 'Warehouses';\n\n  const dispatch = useDispatch();\n\n  const primaryData = useSelector(state => isWarehouse ? state.allWarehousesReducer : state.allFactoriesReducer);\n  const secondaryData = useSelector(state => isWarehouse ? state.allInventoryReducer : state.allMachinesReducer);\n  \n  const fieldId = isWarehouse ? 'warehouseId' : 'factoryId';\n  const fieldName = isWarehouse ? 'warehouseName' : 'factoryName';\n\n  useEffect(() => {\n    const firstRowEl = document.querySelector('tr[path=\"0\"]');\n    firstRowEl.classList.add('active-row');\n  }, [])\n\n  useEffect(() => {\n    const tableHeaderSpacingEl = document.querySelector('.MTableToolbar-spacer-7');\n\n    if (tableHeaderSpacingEl) {\n      tableHeaderSpacingEl.remove();\n    }\n\n    const searchInputEl = document.querySelector('.table-container .MuiFormControl-root.MuiTextField-root.MTableToolbar-searchField-10');\n    if (searchInputEl) {\n      searchInputEl.classList.add('primary-search-input');\n    }\n  }, [])\n\n  return (\n      <div className='table-container'>\n        <h2 class=\"primary\">{type.toUpperCase()}</h2>\n        <MaterialTable\n          title=\"\"\n          columns={[\n            {\n              title: \"ID\",\n              field: fieldId,\n              width: \"15%\",\n              render: rowData => {\n                const id = isWarehouse ? rowData.warehouseId : rowData.factoryId\n                return (\n                  <div>\n                    <div>{id}</div>\n                  </div>)\n              }\n            },\n            {\n              title: \"Name\",\n              field: fieldName,\n              width: \"85%\",\n              render: rowData => {\n                const { warehouseName, warehouseAddress, warehouseDescription, factoryName, factoryAddress, factoryDescription } = rowData\n                const addressData = warehouseAddress || factoryAddress\n                const { streetLine1, streetLine2, city, stateProvince, zipPostalCode, country } = addressData\n                const name = warehouseName || factoryName\n                const address = `${streetLine1}${streetLine2 ? ` ${streetLine2}` : ''}`\n                const description = warehouseDescription || factoryDescription\n                const cityStateCountry = `${city}, ${stateProvince} ${zipPostalCode} ${country}`\n                return (\n                  <div>\n                    <div>\n                      <span className=\"primary\">{name}</span>\n                      <ToolTip title={description} placement=\"right-start\" arrow>\n                        <InfoOutlinedIcon fontSize=\"small\" className=\"info-icon\" />\n                      </ToolTip>\n                    </div>\n                    <div className=\"fs-p75\">\n                      <div>{address}</div>\n                      <div>{cityStateCountry}</div>\n                    </div>\n                  </div>)\n              }\n            }\n          ]}\n          data={primaryData}\n          options={{ pageSize: 10 }}\n          onRowClick={(event, rowData) => {\n            const prevActiveEl = document.querySelector('.active-row')\n            if (prevActiveEl) {\n              prevActiveEl.classList.remove('active-row')\n            }\n            const rowId = rowData.tableData.id\n            const rowEl = document.querySelector(`tr[path=\"${rowId}\"]`)\n            rowEl.classList.add('active-row')\n            if (isWarehouse) {\n              dispatch(setWarehouseDetail(rowData[fieldId], primaryData))\n              dispatch(setInventoryDetail(rowData[fieldId], secondaryData))\n            } else {\n              dispatch(setFactoryDetail(rowData[fieldId], primaryData))\n              dispatch(setMachineDetail(rowData[fieldId], secondaryData))\n            }\n\n            dispatch(setActiveDetailClass())\n            \n            event.stopPropagation();\n          }}\n          icons={{\n            Clear: forwardRef((props, ref) => <ClearIcon {...props} ref={ref} />),\n            Search: forwardRef((props, ref) => <SearchIcon {...props} ref={ref} />),\n            ResetSearch: forwardRef((props, ref) => <ClearIcon {...props} ref={ref} />),\n            FirstPage: forwardRef((props, ref) => <FirstPageIcon {...props} ref={ref} />),\n            LastPage: forwardRef((props, ref) => <LastPageIcon {...props} ref={ref} />),\n            NextPage: forwardRef((props, ref) => <ArrowForwardIosIcon {...props} ref={ref} />),\n            PreviousPage: forwardRef((props, ref) => <ArrowBackIosIcon {...props} ref={ref} />),\n            SortArrow: forwardRef((props, ref) => <KeyboardArrowDownIcon {...props} ref={ref} />),\n          }}\n        />\n      </div>\n  );\n}\n\n","export const setFactoryDetail = (id, primaryData) => {\n    return {\n        type: 'setFactoryDetail',\n        payload: { id, primaryData }\n    }\n};\n\nexport const setWarehouseDetail = (id, primaryData) => {\n    return {\n        type: 'setWarehouseDetail',\n        payload: { id, primaryData }\n    }\n};\n\nexport const setMachineDetail = (id, secondaryData) => {\n    return {\n        type: 'setMachineDetail',\n        payload: { id, secondaryData }\n    }\n};\n\nexport const setInventoryDetail = (id, secondaryData) => {\n    return {\n        type: 'setInventoryDetail',\n        payload: { id, secondaryData }\n    }\n};\n\nexport const deleteItem = (primaryId, secondaryId) => {\n    return {\n        type: 'deleteItem',\n        payload: { primaryId, secondaryId }\n    }\n};\n\nexport const deleteMachine = (primaryId, secondaryId) => {\n    return {\n        type: 'deleteMachine',\n        payload: { primaryId, secondaryId }\n    }\n};\n\nexport const editMachine = (editObj) => {\n    return {\n        type: 'editMachine',\n        payload: editObj\n    }\n};\n\nexport const editItem = (editObj) => {\n    return {\n        type: 'editItem',\n        payload: editObj\n    }\n};\n\nexport const addMachine = (addObj) => {\n    return {\n        type: 'addMachine',\n        payload: addObj\n    }\n};\n\nexport const addItem = (addObj) => {\n    return {\n        type: 'addItem',\n        payload: addObj\n    }\n};\n\nexport const setActiveDetailClass = () => {\n    return {\n        type: 'setActiveDetailClass'\n    }\n};","import { forwardRef, useState } from 'react';\nimport MaterialTable from \"material-table\";\nimport Snackbar from '@mui/material/Snackbar';\nimport Alert from '@mui/material/Alert';\nimport SearchIcon from '@mui/icons-material/Search';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport TextField from '@mui/material/TextField';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteItem, deleteMachine, editItem, editMachine, addItem, addMachine, setActiveDetailClass } from '../redux/actions'\n\n// Secondary table displays Inventory or Machine data\n// CRUD functionality is enabled within this component\nexport default function SecondaryTable({ type, primaryId }) {\n  const [openDeleteModal, setOpenDeleteModal] = useState(false);\n  const [openEditModal, setOpenEditModal] = useState(false);\n  const [openAddModal, setOpenAddModal] = useState(false);\n  const [openSnackBar, setOpenSnackBar] = useState(false);\n  const [snackBarMessage, setSnackBarMessage] = useState(\"Success!\");\n  const [editData, setEditData] = useState({});\n\n  const isWarehouse = type === 'Warehouses';\n\n  const dispatch = useDispatch();\n  \n  // secondaryDetail is either the Inventory Detail or the Machine Detail\n  // Set the properties based on whether we are in Warehouse mode or Factory mode\n  const secondaryDetail = useSelector(state => isWarehouse ? state.inventoryDetailReducer : state.machineDetailReducer);\n  const title = isWarehouse ? 'INVENTORY ITEMS' : 'MACHINES';\n  const primaryIdKey = isWarehouse ? 'warehouseId' : 'factoryId';\n  const secondaryIdKey = isWarehouse ? 'itemId' : 'machineId';\n  const secondaryNameKey = isWarehouse ? 'itemName' : 'machineName';\n  const id = (primaryId || secondaryDetail[0][primaryIdKey] ) || (editData[primaryIdKey] || 0);\n\n  const handleClickOpen = ({ event, rowData, actionType }) => {\n    setEditData(rowData);\n\n    switch (actionType) {\n      case 'edit':\n        setOpenEditModal(true);\n        break;\n      case 'delete':\n        setOpenDeleteModal(true);\n        break;\n      case 'add':\n        setOpenAddModal(true);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleDelete = () => {\n    if (isWarehouse) {\n      dispatch(deleteItem(id, editData[secondaryIdKey]));\n      const snackBarMessage = `Item ID: ${editData[secondaryIdKey]} has been successfully deleted.`\n      setSnackBarMessage(snackBarMessage)\n    } else {\n      dispatch(deleteMachine(id, editData[secondaryIdKey]));\n      const snackBarMessage = `Machine ID: ${editData[secondaryIdKey]} has been successfully deleted.`\n      setSnackBarMessage(snackBarMessage)\n    }\n    const actionType = 'delete';\n    handleClose(actionType);\n  };\n\n  const handleEdit = (e) => {\n\n    // Grab all the form inputs from the modal and store its values in an object\n    // Use that object as payload for API call\n    const formEl = e.target.parentNode.parentNode;\n    const inputs = formEl.querySelectorAll('input');\n    const originalIds = { originalPrimaryId: id, originalSecondaryId: editData[secondaryIdKey] };\n    const newFields = {};\n    inputs.forEach(input => newFields[input.parentNode.parentNode.dataset.key] = input.type === 'number' ? +input.value : input.value);\n    const editObj = { originalIds, newFields };\n\n    if (isWarehouse) {\n      dispatch(editItem(editObj));\n      const snackBarMessage = `Item ID: ${editData[secondaryIdKey]} has been successfully edited and saved!`;\n      setSnackBarMessage(snackBarMessage);\n    } else {\n      dispatch(editMachine(editObj));\n      const snackBarMessage = `Machine ID: ${editData[secondaryIdKey]} has been successfully edited and saved!`;\n      setSnackBarMessage(snackBarMessage);\n    }\n    const actionType = 'edit';\n    handleClose(actionType);\n  };\n\n  const handleAdd = (e) => {\n\n    // Grab all the form inputs from the modal and store its values in an object\n    // Use that object as payload for API call\n    const formEl = e.target.parentNode.parentNode;\n    const inputs = formEl.querySelectorAll('input');\n    const newFields = { [primaryIdKey]: id };\n    inputs.forEach(input => newFields[input.parentNode.parentNode.dataset.key] = input.type === 'number' ? +input.value : input.value);\n    const addObj = { newFields };\n\n    if (isWarehouse) {\n      dispatch(addItem(addObj));\n      const snackBarMessage = `${newFields.itemName} ID: ${newFields.itemId} has been successfully add to Warehouse ${id}.`;\n      setSnackBarMessage(snackBarMessage);\n    } else {\n      dispatch(addMachine(addObj));\n      const snackBarMessage = `${newFields.machineName} ID: ${newFields.machineId} has been successfully add to Factory ${id}.`;\n      setSnackBarMessage(snackBarMessage);\n    }\n    const actionType = 'add';\n    handleClose(actionType);\n  };\n\n  const handleClose = (actionType, isCancel) => {\n    switch (actionType) {\n      case 'edit':\n        setOpenEditModal(false);\n        break;\n      case 'delete':\n        setOpenDeleteModal(false);;\n        break;\n      case 'add':\n        setOpenAddModal(false);\n        break;\n      default:\n        break;\n    }\n    if (isCancel) return;\n    setOpenSnackBar(true);\n    dispatch(setActiveDetailClass());\n  }\n\n  const handleCloseSnackBar = () => {\n    setOpenSnackBar(false);\n  }\n\n  let columns = [];\n  if (isWarehouse) {\n    columns = [\n      {\n        title: \"ID\",\n        field: \"itemId\",\n        width: \"12%\"\n      },\n      {\n        title: \"SKU\",\n        field: \"itemSKU\",\n        width: \"15%\"\n      },\n      {\n        title: \"QUANTITY\",\n        field: \"itemQuantity\",\n        width: \"15%\"\n      },\n      {\n        title: \"NAME\",\n        field: \"itemName\",\n        width: \"18%\"\n      },\n      {\n        title: \"DESCRIPTION\",\n        field: \"itemDescription\",\n        width: \"40%\"\n      }\n    ];\n  } else {\n    columns = [\n      {\n        title: \"ID\",\n        field: \"machineId\",\n        width: \"15%\"\n      },\n      {\n        title: \"NAME\",\n        field: \"machineName\",\n        width: \"15%\",\n      },\n      {\n        title: \"DESCRIPTION\",\n        field: \"machineDescription\",\n        width: \"70%\"\n      }\n    ];\n  }\n\n  let inputFields;\n\n  if (isWarehouse) {\n    inputFields = [\n      { dataKey: 'itemId', dataType: 'number', label: 'Item ID'},\n      { dataKey: 'itemSKU', dataType: 'number', label: 'Item SKU'},\n      { dataKey: 'itemQuantity', dataType: 'number', label: 'Item Quantity'},\n      { dataKey: 'itemName', dataType: 'text', label: 'Item Name'},\n      { dataKey: 'itemDescription', dataType: 'text', label: 'Description'}\n    ];\n  } else {\n    inputFields = [\n      { dataKey: 'machineId', dataType: 'number', label: 'Machine ID'},\n      { dataKey: 'machineName', dataType: 'text', label: 'Machine Name'},\n      { dataKey: 'machineDescription', dataType: 'text', label: 'Description'}\n    ];\n  }\n\n  return (\n      <div className=\"m-1 secondary-table\">\n        <Snackbar\n          open={openSnackBar} \n          autoHideDuration={4000} \n          onClose={handleCloseSnackBar} \n          anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"center\"\n          }}>\n          <Alert onClose={handleCloseSnackBar} severity=\"success\" >\n            {snackBarMessage}\n          </Alert>\n        </Snackbar>\n         <Dialog open={openAddModal}>\n          <DialogTitle>ADD NEW {isWarehouse ? 'ITEM' : 'MACHINE'}</DialogTitle>\n            <DialogContent>\n            {inputFields.map((field) => {\n              return <TextField\n              key={field.name}\n              margin=\"dense\"\n              id={field.name}\n              label={field.label}\n              type={field.dataType}\n              data-key={field.dataKey}\n              fullWidth\n              variant=\"standard\"\n            />\n            })}\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => handleClose('add', true)}>CANCEL</Button>\n            <Button onClick={handleAdd}>SAVE</Button>\n          </DialogActions>  \n        </Dialog>\n        <Dialog\n          open={openDeleteModal}\n          onClose={() => handleClose('delete')}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              <span className=\"dialog-warning fs-1p25\">Are you sure you want to remove {editData[secondaryNameKey]} (ID: {editData[secondaryIdKey]})?</span>\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => handleClose('delete', true)}>NO</Button>\n            <Button onClick={handleDelete} autoFocus>YES, REMOVE</Button>\n          </DialogActions>\n        </Dialog>\n        <Dialog open={openEditModal} onClose={() => handleClose('edit')}>\n          <DialogTitle>EDIT {editData[secondaryNameKey]} (ID: {editData[secondaryIdKey]})</DialogTitle>\n            <DialogContent>\n            {inputFields.map((field) => {\n              return <TextField\n              key={field.name}\n              margin=\"dense\"\n              id={field.name}\n              label={field.label}\n              defaultValue={editData[field.dataKey]}\n              type={field.dataType}\n              data-key={field.dataKey}\n              fullWidth\n              variant=\"standard\"\n            />\n            })}\n            \n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => handleClose('edit', true)}>CANCEL</Button>\n            <Button onClick={handleEdit}>SAVE</Button>\n          </DialogActions>  \n        </Dialog>\n        <MaterialTable\n          title={ title }\n          columns={ columns }\n          data={ secondaryDetail }\n          localization={{\n            header: {\n                actions: 'ACTIONS'\n            }\n        }}\n          actions={[\n            {\n              icon: forwardRef((props, ref) => <DeleteIcon {...props} ref={ref} />),\n              tooltip: \"Delete\",\n              onClick: (event, rowData) => {\n                const actionType = 'delete'\n                handleClickOpen({event, rowData, actionType})\n              }\n            },\n            {\n              icon: forwardRef((props, ref) => <EditIcon {...props} ref={ref} />),\n              tooltip: \"Edit\",\n              onClick: (event, rowData) => {\n                const actionType = 'edit'\n                handleClickOpen({event, rowData, actionType})\n              }\n            },\n            {\n              icon: forwardRef((props, ref) => <AddIcon {...props} ref={ref} />),\n              tooltip: `${isWarehouse ? 'ADD ITEM' : 'ADD MACHINE'}`,\n              isFreeAction: true,\n              onClick: (event, rowData) => {\n                const actionType = 'add'\n                handleClickOpen({event, rowData, actionType})\n              }\n            }\n          ]}\n          icons={{\n            Add: forwardRef((props, ref) => <AddIcon {...props} ref={ref} />),\n            Delete: forwardRef((props, ref) => <DeleteIcon {...props} ref={ref} />),\n            Edit: forwardRef((props, ref) => <EditIcon {...props} ref={ref} />),\n            Clear: forwardRef((props, ref) => <ClearIcon {...props} ref={ref} />),\n            Search: forwardRef((props, ref) => <SearchIcon {...props} ref={ref} />),\n            ResetSearch: forwardRef((props, ref) => <ClearIcon {...props} ref={ref} />),\n            FirstPage: forwardRef((props, ref) => <FirstPageIcon {...props} ref={ref} />),\n            LastPage: forwardRef((props, ref) => <LastPageIcon {...props} ref={ref} />),\n            NextPage: forwardRef((props, ref) => <ArrowForwardIosIcon {...props} ref={ref} />),\n            PreviousPage: forwardRef((props, ref) => <ArrowBackIosIcon {...props} ref={ref} />),\n            SortArrow: forwardRef((props, ref) => <KeyboardArrowDownIcon {...props} ref={ref} />),\n          }}\n        />\n      </div>\n  );\n}","import SecondaryTable from './SecondaryTable';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport Button from '@mui/material/Button';\nimport { setActiveDetailClass } from '../redux/actions';\n\n\n// Detail section appears to the right of the sidebar on larger screens and toggles in and out of view on smaller screens\n// Primary Data (either Warehouse or Factory data) is displayed at the top\n// Secondary Data (either Inventory or Machines) is displayed within SecondaryTable\nfunction DetailSection({ type }) {\n\n  const isWarehouse = type === 'Warehouses';\n\n  const dispatch = useDispatch();\n\n  const primaryDetail = useSelector(state => isWarehouse ? state.warehouseDetailReducer : state.factoryDetailReducer);\n  const activeDetailClass = useSelector(state => state.activeDetailClassReducer);\n  const { warehouseId, warehouseName, warehouseAddress, warehouseDescription, factoryId, factoryName, factoryAddress, factoryDescription } = primaryDetail;\n  const addressData = warehouseAddress || factoryAddress;\n  const primaryId = warehouseId || factoryId;\n  const { buildingName, streetLine1, streetLine2, city, stateProvince, zipPostalCode, country } = addressData;\n  const name = warehouseName || factoryName;\n  const address = `${streetLine1}${streetLine2 ? ` ${streetLine2}` : ''}`;\n  const cityStateCountry = `${city}, ${stateProvince} ${zipPostalCode} ${country}`;\n  const description = warehouseDescription || factoryDescription;\n\n  \n\n  return (\n    <section className={`detail-section flex-column-center ${activeDetailClass ? 'active' : ''}`}>\n      <div id=\"back-button\" className=\"flex-start m-p75\">\n        <Button onClick={() => dispatch(setActiveDetailClass())}><ArrowBackIosIcon /></Button>\n      </div>\n      <h2>{name} (ID: {primaryId || \"0\"})</h2>\n      <b>{buildingName}</b>\n      <span>{address}</span>\n      <span>{cityStateCountry}</span>\n      <span className=\"m-1 w-50-percent align-self-center\">{description}</span>\n      <SecondaryTable type={type} primaryId={primaryId} />\n    </section>\n  );\n}\n\nexport default DetailSection;\n","import '../App.css';\nimport PrimaryTable from './PrimaryTable';\nimport DetailSection from './DetailSection';\n\nfunction PageContainer({ type }) {\n  return (\n    <div className=\"display-flex\">\n      <PrimaryTable type={type} />\n      <DetailSection className=\"detail-section\" type={type}/>\n    </div>\n  );\n}\n\nexport default PageContainer;\n","const pageConfigs = [\n    {\n        type: 'Warehouses',\n        url: '/vandelay/warehouses'\n    },\n    {\n        type: 'Factories',\n        url: '/vandelay/factories'\n    }\n]\n\nexport default pageConfigs","\nconst warehouses = require('../../mockData/warehouses.json');\n\nconst allWarehousesReducer = (state = warehouses, action) => {\n    switch (action.type) {\n        default:\n            return state;\n        }\n}\n\nexport default allWarehousesReducer;","const factories = require('../../mockData/factories.json');\n\nconst allFactoriesReducer = (state = factories, action) => {\n    switch (action.type) {\n        default:\n            return state;\n        }\n}\n\nexport default allFactoriesReducer;","\nconst inventory = require('../../mockData/inventory.json');\n\nconst allInventoryReducer = (state = inventory, action) => {\n    switch (action.type) {\n        case 'addItem':{\n            const { newFields } = action.payload\n            const newAllInventory = {...state}\n            newAllInventory[newFields.warehouseId] = [...newAllInventory[newFields.warehouseId], newFields]\n            state = { ...newAllInventory }\n            return state;\n        }\n        case 'editItem': {\n            const { originalIds, newFields } = action.payload\n            const { originalPrimaryId, originalSecondaryId } = originalIds\n            const newAllInventory = {...state}\n\n            const itemIndex = newAllInventory[originalPrimaryId].findIndex(item => item.itemId === originalSecondaryId)\n            \n            const newInventoryDetail = [...newAllInventory[originalPrimaryId]]\n            newInventoryDetail[itemIndex] = {...newFields}\n\n            newAllInventory[originalPrimaryId] = [...newInventoryDetail]\n\n            state = {...newAllInventory}\n            return state;\n        }\n        case 'deleteItem': {\n            const { primaryId, secondaryId } = action.payload\n            const inventoryDetail = state[primaryId]\n            const newInventoryDetail = inventoryDetail.filter(item => item.itemId !== secondaryId)\n            state[primaryId] = newInventoryDetail\n            return state;\n        }\n        default:\n            return state;\n        }\n}\n\nexport default allInventoryReducer;","\nconst machines = require('../../mockData/machines.json');\n\nconst allMachinesReducer = (state = machines, action) => {\n    switch (action.type) {\n        case 'addMachine':{\n            const { newFields } = action.payload\n            const newAllInventory = {...state}\n            newAllInventory[newFields.factoryId] = [...newAllInventory[newFields.factoryId], newFields]\n            state = { ...newAllInventory }\n            return state;\n        }\n        case 'editMachine': {\n            const { originalIds, newFields } = action.payload\n            const { originalPrimaryId, originalSecondaryId } = originalIds\n            const newAllInventory = {...state}\n            const inventoryDetail = newAllInventory[originalPrimaryId]\n            const itemIndex = inventoryDetail.findIndex(item => item.machineId === originalSecondaryId)\n            \n            const newInventoryDetail = [...newAllInventory[originalPrimaryId]]\n            newInventoryDetail[itemIndex] = {...newFields}\n\n            newAllInventory[originalPrimaryId] = [...newInventoryDetail]\n\n            state = {...newAllInventory}\n            return state;\n        }\n        case 'deleteMachine': {\n            const { primaryId, secondaryId } = action.payload\n            const machineDetail = state[primaryId]\n            const newMachineDetail = machineDetail.filter(item => item.machineId !== secondaryId)\n            state[primaryId] = newMachineDetail\n            return state;\n        }\n        default:\n            return state;\n        }\n}\n\nexport default allMachinesReducer;","const factories = require('../../mockData/factories.json');\n\nconst factoryDetailReducer = (state = factories[0], action) => {\n    switch (action.type) {\n        case 'setFactoryDetail':\n            const { id, primaryData } = action.payload\n            return state = primaryData[id];\n        default:\n            return state;\n        }\n}\n\nexport default factoryDetailReducer;","const warehouses = require('../../mockData/warehouses.json');\n\nconst warehouseDetailReducer = (state = warehouses[0], action) => {\n    switch (action.type) {\n        case 'setWarehouseDetail':\n            const { id, primaryData } = action.payload\n            return state = primaryData[id];\n        default:\n            return state;\n        }\n}\n\nexport default warehouseDetailReducer;","const inventory = require('../../mockData/inventory.json');\n\nconst inventoryDetailReducer = (state = inventory[0], action) => {\n    switch (action.type) {\n        case 'addItem': {\n            const { newFields } = action.payload\n            const newState = [...state, newFields]\n            state = [...newState]\n            return state;\n        }\n        case 'editItem': {\n            const { originalIds, newFields } = action.payload\n            const newState = [...state]\n            const itemIndex = newState.findIndex(item => item.itemId === originalIds.originalSecondaryId)\n            newState[itemIndex] = {...newFields}\n            state = [...newState]\n            return state;\n        }\n        case 'deleteItem': {\n            const { secondaryId } = action.payload\n            const inventoryDetail = state\n            const newInventoryDetail = inventoryDetail.filter(item => item.itemId !== secondaryId)\n            state = newInventoryDetail\n            return state;\n        }\n        case 'setInventoryDetail': {\n            const { id, secondaryData } = action.payload\n            return state = secondaryData[id];\n        }\n        default:\n            return state;\n        }\n}\n\nexport default inventoryDetailReducer;","const machines = require('../../mockData/machines.json');\n\nconst machineDetailReducer = (state = machines[0], action) => {\n    switch (action.type) {\n        case 'addMachine': {\n            const { newFields } = action.payload\n            const newState = [...state, newFields]\n            state = [...newState]\n            return state;\n        }\n        case 'editMachine': {\n            const { originalIds, newFields } = action.payload\n            const newState = [...state]\n            const itemIndex = newState.findIndex(item => item.machineId === originalIds.originalSecondaryId)\n            newState[itemIndex] = {...newFields}\n            state = [...newState]\n            return state\n        };\n        case 'deleteMachine':{\n            const { secondaryId } = action.payload\n            const machineDetail = state\n            const newMachineDetail = machineDetail.filter(item => item.machineId !== secondaryId)\n            state = newMachineDetail\n            return state\n        };\n        case 'setMachineDetail': {\n            const { id, secondaryData } = action.payload\n            return state = secondaryData[id];\n        }\n        default:\n            return state;\n        }\n}\n\nexport default machineDetailReducer;","const activeDetailClassReducer = (state = true, action) => {\n    switch (action.type) {\n        default:\n            return !state;\n        }\n}\n\nexport default activeDetailClassReducer;","import allWarehousesReducer from './allWarehouses';\nimport allFactoriesReducer from './allFactories';\nimport allInventoryReducer from './allInventory';\nimport allMachinesReducer from './allMachines';\nimport factoryDetailReducer from './factoryDetail';\nimport warehouseDetailReducer from './warehouseDetail';\nimport inventoryDetailReducer from './inventoryDetail';\nimport machineDetailReducer from './machineDetail';\nimport activeDetailClassReducer from './activeDetailClass';\nimport { combineReducers } from 'redux';\n\nconst allReducers = combineReducers({\n    allWarehousesReducer,\n    allFactoriesReducer,\n    allInventoryReducer,\n    allMachinesReducer,\n    factoryDetailReducer,\n    warehouseDetailReducer,\n    inventoryDetailReducer,\n    machineDetailReducer,\n    activeDetailClassReducer\n})\n\nexport default allReducers;\n","import './App.css';\nimport Nav from './components/Nav';\nimport PageContainer from './components/PageContainer';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport pageConfigs from './pageConfigs';\nimport { createStore } from 'redux';\nimport allReducers from './redux/reducers';\nimport { Provider } from 'react-redux';\n\nfunction App() {\nconst store = createStore(allReducers,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\n  return (\n    <Provider store= {store}>\n      <Router>\n        <div className=\"App\">\n          <Nav pages={pageConfigs} />\n          <Switch>\n            <Route exact path=\"/vandelay\">\n              <Redirect to=\"/vandelay/warehouses\" />\n            </Route>\n            {pageConfigs.map(({ type, url }) => (\n              <Route\n                key={type} \n                path={url} \n                render={props => (<PageContainer { ...props } type={type} />)}\n              />))}\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}