{"version":3,"sources":["components/Nav.js","components/PrimaryTable.js","redux/actions/index.js","components/SecondaryTable.js","components/DetailSection.js","components/PageContainer.js","pageConfigs.js","redux/reducers/allWarehouses.js","redux/reducers/allFactories.js","redux/reducers/allInventory.js","redux/reducers/allMachines.js","redux/reducers/factoryDetail.js","redux/reducers/warehouseDetail.js","redux/reducers/inventoryDetail.js","redux/reducers/machineDetail.js","redux/reducers/activeDetailClass.js","redux/reducers/index.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","pages","addClickedClass","e","prevActiveEl","document","querySelector","classList","remove","target","add","to","className","map","type","url","onClick","PrimaryTable","isWarehouse","primaryData","useSelector","state","allWarehousesReducer","allFactoriesReducer","secondaryData","allInventoryReducer","allMachinesReducer","dispatch","useDispatch","fieldId","fieldName","useEffect","title","columns","field","width","render","rowData","id","warehouseId","factoryId","warehouseName","warehouseAddress","warehouseDescription","factoryName","factoryAddress","factoryDescription","addressData","streetLine1","streetLine2","city","stateProvince","zipPostalCode","country","name","address","description","cityStateCountry","placement","arrow","fontSize","data","options","pageSize","onRowClick","event","rowId","tableData","payload","setWarehouseDetail","setInventoryDetail","setFactoryDetail","setMachineDetail","stopPropagation","icons","Clear","forwardRef","props","ref","Search","ResetSearch","FirstPage","LastPage","NextPage","PreviousPage","SortArrow","SecondaryTable","inputFields","primaryId","useState","openDeleteModal","setOpenDeleteModal","openEditModal","setOpenEditModal","openAddModal","setOpenAddModal","editData","setEditData","secondaryDetail","inventoryDetailReducer","machineDetailReducer","activeDetailClassReducer","primaryIdKey","secondaryIdKey","secondaryNameKey","handleClickOpen","actionType","handleClose","isCancel","dataKey","dataType","label","Dialog","open","DialogTitle","DialogContent","TextField","margin","fullWidth","variant","DialogActions","Button","inputs","parentNode","querySelectorAll","newFields","forEach","input","dataset","key","value","addObj","addItem","addMachine","onClose","DialogContentText","secondaryId","deleteItem","deleteMachine","autoFocus","defaultValue","originalIds","originalPrimaryId","originalSecondaryId","editObj","editItem","editMachine","actionsColumnIndex","localization","header","actions","icon","tooltip","isFreeAction","Add","Delete","Edit","DetailSection","primaryDetail","warehouseDetailReducer","factoryDetailReducer","activeDetailClass","buildingName","PageContainer","pageConfigs","warehouses","require","action","factories","inventory","console","log","newAllInventory","itemIndex","findIndex","item","itemId","newInventoryDetail","inventoryDetail","filter","machines","machineId","machineDetail","newMachineDetail","newState","allReducers","combineReducers","App","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.62970f0b.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\n\nfunction Nav({ pages }) {\n  const addClickedClass = e => {\n    const prevActiveEl = document.querySelector('.active-link')\n    if (prevActiveEl) {\n      prevActiveEl.classList.remove('active-link')\n    }\n    const linkEl = e.target\n    linkEl.classList.add('active-link')\n  }\n\n  return (\n    <nav>\n      <Link to=\"/warehouses\">\n        <h3>Vandelay</h3>\n      </Link>\n      <ul className=\"nav-links\">\n        {pages.map(({ type, url }) => <Link to={url} onClick={addClickedClass} key={type}><li>{type}</li></Link>)}\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import { forwardRef, useEffect} from 'react';\nimport MaterialTable from \"material-table\";\nimport SearchIcon from '@mui/icons-material/Search';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\nimport ToolTip from '@mui/material/Tooltip';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFactoryDetail, setWarehouseDetail, setInventoryDetail, setMachineDetail, setActiveDetailClass } from '../redux/actions'\n\nexport default function PrimaryTable({ type }) {\n  const isWarehouse = type === 'Warehouses'\n  const primaryData = useSelector(state => isWarehouse ? state.allWarehousesReducer : state.allFactoriesReducer);\n  const secondaryData = useSelector(state => isWarehouse ? state.allInventoryReducer : state.allMachinesReducer);\n  const dispatch = useDispatch()\n  const fieldId = isWarehouse ? 'warehouseId' : 'factoryId'\n  const fieldName = isWarehouse ? 'warehouseName' : 'factoryName'\n\n  useEffect(() => {\n    const firstRowEl = document.querySelector('tr[path=\"0\"]')\n    firstRowEl.classList.add('active-row')\n  }, [])\n\n  return (\n      <div className='table-container'>\n        <h2>{type}</h2>\n        <MaterialTable\n          title=\"\"\n          columns={[\n            {\n              title: \"ID\",\n              field: fieldId,\n              width: \"15%\",\n              render: rowData => {\n                const id = isWarehouse ? rowData.warehouseId : rowData.factoryId\n                return (\n                  <div>\n                    <div>{id}</div>\n                  </div>)\n              }\n            },\n            {\n              title: \"Name\",\n              field: fieldName,\n              width: \"85%\",\n              render: rowData => {\n                const { warehouseName, warehouseAddress, warehouseDescription, factoryName, factoryAddress, factoryDescription } = rowData\n                const addressData = warehouseAddress || factoryAddress\n                const { streetLine1, streetLine2, city, stateProvince, zipPostalCode, country } = addressData\n                const name = warehouseName || factoryName\n                const address = `${streetLine1}${streetLine2 ? ` ${streetLine2}` : ''}`\n                const description = warehouseDescription || factoryDescription\n                const cityStateCountry = `${city}, ${stateProvince} ${zipPostalCode} ${country}`\n                return (\n                  <div>\n                    <div>\n                      <span>{name}</span>\n                      <ToolTip title={description} placement=\"right-start\" arrow>\n                        <InfoOutlinedIcon fontSize=\"small\" className=\"info-icon\" />\n                      </ToolTip>\n                    </div>\n                    <div className=\"fs-p75 secondary\">\n                      <div>{address}</div>\n                      <div>{cityStateCountry}</div>\n                    </div>\n                  </div>)\n              }\n            }\n          ]}\n          data={primaryData}\n          options={{ pageSize: 10 }}\n          onRowClick={(event, rowData) => {\n            const prevActiveEl = document.querySelector('.active-row')\n            if (prevActiveEl) {\n              prevActiveEl.classList.remove('active-row')\n            }\n            const rowId = rowData.tableData.id\n            const rowEl = document.querySelector(`tr[path=\"${rowId}\"]`)\n            rowEl.classList.add('active-row')\n            if (isWarehouse) {\n              dispatch(setWarehouseDetail(rowData[fieldId], primaryData))\n              dispatch(setInventoryDetail(rowData[fieldId], secondaryData))\n            } else {\n              dispatch(setFactoryDetail(rowData[fieldId], primaryData))\n              dispatch(setMachineDetail(rowData[fieldId], secondaryData))\n            }\n\n            dispatch(setActiveDetailClass())\n            \n            event.stopPropagation();\n          }}\n          icons={{\n            Clear: forwardRef((props, ref) => <ClearIcon {...props} ref={ref} />),\n            Search: forwardRef((props, ref) => <SearchIcon {...props} ref={ref} />),\n            ResetSearch: forwardRef((props, ref) => <ClearIcon {...props} ref={ref} />),\n            FirstPage: forwardRef((props, ref) => <FirstPageIcon {...props} ref={ref} />),\n            LastPage: forwardRef((props, ref) => <LastPageIcon {...props} ref={ref} />),\n            NextPage: forwardRef((props, ref) => <ArrowForwardIosIcon {...props} ref={ref} />),\n            PreviousPage: forwardRef((props, ref) => <ArrowBackIosIcon {...props} ref={ref} />),\n            SortArrow: forwardRef((props, ref) => <KeyboardArrowDownIcon {...props} ref={ref} />),\n          }}\n        />\n      </div>\n  );\n}\n\n","export const setFactoryDetail = (id, primaryData) => {\n    return {\n        type: 'setFactoryDetail',\n        payload: { id, primaryData }\n    }\n};\n\nexport const setWarehouseDetail = (id, primaryData) => {\n    return {\n        type: 'setWarehouseDetail',\n        payload: { id, primaryData }\n    }\n};\n\nexport const setMachineDetail = (id, secondaryData) => {\n    return {\n        type: 'setMachineDetail',\n        payload: { id, secondaryData }\n    }\n};\n\nexport const setInventoryDetail = (id, secondaryData) => {\n    return {\n        type: 'setInventoryDetail',\n        payload: { id, secondaryData }\n    }\n};\n\nexport const deleteItem = (primaryId, secondaryId) => {\n    return {\n        type: 'deleteItem',\n        payload: { primaryId, secondaryId }\n    }\n};\n\nexport const deleteMachine = (primaryId, secondaryId) => {\n    return {\n        type: 'deleteMachine',\n        payload: { primaryId, secondaryId }\n    }\n};\n\nexport const editMachine = (editObj) => {\n    return {\n        type: 'editMachine',\n        payload: editObj\n    }\n};\n\nexport const editItem = (editObj) => {\n    return {\n        type: 'editItem',\n        payload: editObj\n    }\n};\n\nexport const addMachine = (addObj) => {\n    return {\n        type: 'addMachine',\n        payload: addObj\n    }\n};\n\nexport const addItem = (addObj) => {\n    return {\n        type: 'addItem',\n        payload: addObj\n    }\n};\n\nexport const setActiveDetailClass = () => {\n    return {\n        type: 'setActiveDetailClass'\n    }\n};","import { forwardRef } from 'react';\nimport MaterialTable from \"material-table\";\nimport SearchIcon from '@mui/icons-material/Search';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport TextField from '@mui/material/TextField';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteItem, deleteMachine, editItem, editMachine, addItem, addMachine, setActiveDetailClass } from '../redux/actions'\n\nexport default function SecondaryTable({ type, primaryId }) {\n  const [openDeleteModal, setOpenDeleteModal] = useState(false);\n  const [openEditModal, setOpenEditModal] = useState(false);\n  const [openAddModal, setOpenAddModal] = useState(false);\n  const [editData, setEditData] = useState({});\n  const dispatch = useDispatch()\n  const isWarehouse = type === 'Warehouses'\n  const secondaryDetail = useSelector(state => isWarehouse ? state.inventoryDetailReducer : state.machineDetailReducer);\n  const activeDetailClass = useSelector(state => state.activeDetailClassReducer);\n  const title = isWarehouse ? 'INVENTORY ITEMS' : 'MACHINES'\n  const primaryIdKey = isWarehouse ? 'warehouseId' : 'factoryId'\n  const secondaryIdKey = isWarehouse ? 'itemId' : 'machineId'\n  const secondaryNameKey = isWarehouse ? 'itemName' : 'machineName'\n\n  const handleClickOpen = ({ event, rowData, actionType }) => {\n    setEditData(rowData);\n\n    switch (actionType) {\n      case 'edit':\n        setOpenEditModal(true);\n        break;\n      case 'delete':\n        setOpenDeleteModal(true);\n        break;\n      case 'add':\n        setOpenAddModal(true);\n        break;\n    }\n  };\n\n  const handleDelete = () => {\n    const id = (primaryId || secondaryDetail[0][primaryIdKey] ) || (editData[primaryIdKey] || 0)\n    if (isWarehouse) {\n      dispatch(deleteItem(id, editData[secondaryIdKey]))\n    } else {\n      dispatch(deleteMachine(id, editData[secondaryIdKey]))\n    }\n    const actionType = 'delete'\n    handleClose(actionType);\n  };\n\n  const handleEdit = (e) => {\n    const formEl = e.target.parentNode.parentNode\n    const inputs = formEl.querySelectorAll('input')\n    const id = (primaryId || secondaryDetail[0][primaryIdKey] ) || (editData[primaryIdKey] || 0)\n    const originalIds = { originalPrimaryId: id, originalSecondaryId: editData[secondaryIdKey] }\n    const newFields = {}\n    inputs.forEach(input => newFields[input.parentNode.parentNode.dataset.key] = input.type === 'number' ? +input.value : input.value)\n    const editObj = { originalIds, newFields }\n    if (isWarehouse) {\n      dispatch(editItem(editObj))\n    } else {\n      dispatch(editMachine(editObj))\n    }\n    const actionType = 'edit'\n    handleClose(actionType);\n  };\n\n  const handleAdd = (e) => {\n    const formEl = e.target.parentNode.parentNode\n    const inputs = formEl.querySelectorAll('input')\n    const newFields = { [primaryIdKey]: primaryId }\n    inputs.forEach(input => newFields[input.parentNode.parentNode.dataset.key] = input.type === 'number' ? +input.value : input.value)\n    const addObj = { newFields }\n    if (isWarehouse) {\n      dispatch(addItem(addObj))\n    } else {\n      dispatch(addMachine(addObj))\n    }\n    const actionType = 'add'\n    handleClose(actionType);\n  };\n\n  const handleClose = (actionType, isCancel) => {\n    switch (actionType) {\n      case 'edit':\n        setOpenEditModal(false);\n        break;\n      case 'delete':\n        setOpenDeleteModal(false);;\n        break;\n      case 'add':\n        setOpenAddModal(false);\n        break;\n    }\n    if (isCancel) return\n    dispatch(setActiveDetailClass())\n  };\n\n  let columns = []\n  if (isWarehouse) {\n    columns = [\n      {\n        title: \"ID\",\n        field: \"itemId\",\n        width: \"12%\"\n      },\n      {\n        title: \"SKU\",\n        field: \"itemSKU\",\n        width: \"15%\"\n      },\n      {\n        title: \"QUANTITY\",\n        field: \"itemQuantity\",\n        width: \"15%\"\n      },\n      {\n        title: \"NAME\",\n        field: \"itemName\",\n        width: \"18%\"\n      },\n      {\n        title: \"DESCRIPTION\",\n        field: \"itemDescription\",\n        width: \"40%\"\n      }\n    ]\n  } else {\n    columns = [\n      {\n        title: \"ID\",\n        field: \"machineId\",\n        width: \"15%\"\n      },\n      {\n        title: \"NAME\",\n        field: \"machineName\",\n        width: \"15%\",\n      },\n      {\n        title: \"DESCRIPTION\",\n        field: \"machineDescription\",\n        width: \"70%\"\n      }\n    ]\n  }\n\n  let inputFields\n\n  if (isWarehouse) {\n    inputFields = [\n      // { dataKey: 'warehouseId', dataType: 'number', label: 'Warehouse ID'},\n      { dataKey: 'itemId', dataType: 'number', label: 'Item ID'},\n      { dataKey: 'itemSKU', dataType: 'number', label: 'Item SKU'},\n      { dataKey: 'itemQuantity', dataType: 'number', label: 'Item Quantity'},\n      { dataKey: 'itemName', dataType: 'text', label: 'Item Name'},\n      { dataKey: 'itemDescription', dataType: 'text', label: 'Description'}\n    ]\n  } else {\n    inputFields = [\n      // { dataKey: 'factoryId', dataType: 'number', label: 'Factory ID'},\n      { dataKey: 'machineId', dataType: 'number', label: 'Machine ID'},\n      { dataKey: 'machineName', dataType: 'text', label: 'Machine Name'},\n      { dataKey: 'machineDescription', dataType: 'text', label: 'Description'}\n    ]\n  }\n\n  return (\n      <div className=\"m-1 secondary-table\">\n         <Dialog open={openAddModal}>\n          <DialogTitle>ADD NEW {isWarehouse ? 'ITEM' : 'MACHINE'}</DialogTitle>\n            <DialogContent>\n            {inputFields.map((field) => {\n              return <TextField\n              key={field.name}\n              margin=\"dense\"\n              id={field.name}\n              label={field.label}\n              type={field.dataType}\n              data-key={field.dataKey}\n              fullWidth\n              variant=\"standard\"\n            />\n            })}\n            \n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => handleClose('add', true)}>CANCEL</Button>\n            <Button onClick={handleAdd}>SAVE</Button>\n          </DialogActions>  \n        </Dialog>\n        <Dialog\n          open={openDeleteModal}\n          onClose={() => handleClose('delete')}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Are you sure you want to remove {editData[secondaryNameKey]} (ID: {editData[secondaryIdKey]})?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => handleClose('delete', true)}>NO</Button>\n            <Button onClick={handleDelete} autoFocus>YES, REMOVE</Button>\n          </DialogActions>\n        </Dialog>\n        <Dialog open={openEditModal} onClose={() => handleClose('edit')}>\n          <DialogTitle>EDIT {editData[secondaryNameKey]} (ID: {editData[secondaryIdKey]})</DialogTitle>\n            <DialogContent>\n            {inputFields.map((field) => {\n              return <TextField\n              key={field.name}\n              margin=\"dense\"\n              id={field.name}\n              label={field.label}\n              defaultValue={editData[field.dataKey]}\n              type={field.dataType}\n              data-key={field.dataKey}\n              fullWidth\n              variant=\"standard\"\n            />\n            })}\n            \n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => handleClose('edit', true)}>CANCEL</Button>\n            <Button onClick={handleEdit}>SAVE</Button>\n          </DialogActions>  \n        </Dialog>\n        <MaterialTable\n          title={ title }\n          columns={ columns }\n          data={ secondaryDetail }\n          options={{ pageSize: 5, actionsColumnIndex: -1 }}\n          localization={{\n            header: {\n                actions: 'ACTIONS'\n            }\n        }}\n          actions={[\n            {\n              icon: forwardRef((props, ref) => <DeleteIcon {...props} ref={ref} />),\n              tooltip: \"Delete\",\n              onClick: (event, rowData) => {\n                const actionType = 'delete'\n                handleClickOpen({event, rowData, actionType})\n              }\n            },\n            {\n              icon: forwardRef((props, ref) => <EditIcon {...props} ref={ref} />),\n              tooltip: \"Edit\",\n              onClick: (event, rowData) => {\n                const actionType = 'edit'\n                handleClickOpen({event, rowData, actionType})\n              }\n            },\n            {\n              icon: forwardRef((props, ref) => <AddIcon {...props} ref={ref} />),\n              tooltip: `${isWarehouse ? 'ADD ITEM' : 'ADD MACHINE'}`,\n              isFreeAction: true,\n              onClick: (event, rowData) => {\n                const actionType = 'add'\n                handleClickOpen({event, rowData, actionType})\n              }\n            }\n          ]}\n          icons={{\n            Add: forwardRef((props, ref) => <AddIcon {...props} ref={ref} />),\n            Delete: forwardRef((props, ref) => <DeleteIcon {...props} ref={ref} />),\n            Edit: forwardRef((props, ref) => <EditIcon {...props} ref={ref} />),\n            Clear: forwardRef((props, ref) => <ClearIcon {...props} ref={ref} />),\n            Search: forwardRef((props, ref) => <SearchIcon {...props} ref={ref} />),\n            ResetSearch: forwardRef((props, ref) => <ClearIcon {...props} ref={ref} />),\n            FirstPage: forwardRef((props, ref) => <FirstPageIcon {...props} ref={ref} />),\n            LastPage: forwardRef((props, ref) => <LastPageIcon {...props} ref={ref} />),\n            NextPage: forwardRef((props, ref) => <ArrowForwardIosIcon {...props} ref={ref} />),\n            PreviousPage: forwardRef((props, ref) => <ArrowBackIosIcon {...props} ref={ref} />),\n            SortArrow: forwardRef((props, ref) => <KeyboardArrowDownIcon {...props} ref={ref} />),\n          }}\n        />\n      </div>\n  );\n}","import SecondaryTable from './SecondaryTable';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport Button from '@mui/material/Button';\nimport { setActiveDetailClass } from '../redux/actions'\n\n\nfunction DetailSection({ type }) {\n  const dispatch = useDispatch()\n  const isWarehouse = type === 'Warehouses'\n  const primaryDetail = useSelector(state => isWarehouse ? state.warehouseDetailReducer : state.factoryDetailReducer);\n  const activeDetailClass = useSelector(state => state.activeDetailClassReducer);\n  const { warehouseId, warehouseName, warehouseAddress, warehouseDescription, factoryId, factoryName, factoryAddress, factoryDescription } = primaryDetail\n  const addressData = warehouseAddress || factoryAddress\n  const primaryId = warehouseId || factoryId\n  const { buildingName, streetLine1, streetLine2, city, stateProvince, zipPostalCode, country } = addressData\n  const name = warehouseName || factoryName\n  const address = `${streetLine1}${streetLine2 ? ` ${streetLine2}` : ''}`\n  const cityStateCountry = `${city}, ${stateProvince} ${zipPostalCode} ${country}`\n  const description = warehouseDescription || factoryDescription\n\n  \n\n  return (\n    <section className={`detail-section flex-column-center ${activeDetailClass ? 'active' : ''}`}>\n      <div id=\"back-button\" className=\"flex-start\">\n        <Button onClick={() => dispatch(setActiveDetailClass())}><ArrowBackIosIcon /></Button>\n      </div>\n      <h2>{name}</h2>\n      <b>{buildingName}</b>\n      <span>{address}</span>\n      <span>{cityStateCountry}</span>\n      <span className=\"m-1\">{description}</span>\n      <SecondaryTable type={type} primaryId={primaryId} />\n    </section>\n  );\n}\n\nexport default DetailSection;\n","import '../App.css';\nimport PrimaryTable from './PrimaryTable';\nimport DetailSection from './DetailSection';\n\nfunction PageContainer({ type }) {\n  return (\n    <div className=\"display-flex\">\n      <PrimaryTable type={type} />\n      <DetailSection className=\"detail-section\" type={type}/>\n    </div>\n  );\n}\n\nexport default PageContainer;\n","const pageConfigs = [\n    {\n        type: 'Warehouses',\n        url: '/warehouses'\n    },\n    {\n        type: 'Factories',\n        url: '/factories'\n    }\n]\n\nexport default pageConfigs","\nconst warehouses = require('../../mockData/warehouses.json');\n\nconst allWarehousesReducer = (state = warehouses, action) => {\n    switch (action.type) {\n        default:\n            return state;\n        }\n}\n\nexport default allWarehousesReducer;","const factories = require('../../mockData/factories.json');\n\nconst allFactoriesReducer = (state = factories, action) => {\n    switch (action.type) {\n        default:\n            return state;\n        }\n}\n\nexport default allFactoriesReducer;","\nconst inventory = require('../../mockData/inventory.json');\n\nconst allInventoryReducer = (state = inventory, action) => {\n    switch (action.type) {\n        case 'addItem':{\n            console.log(action.payload)\n            const { newFields } = action.payload\n            const newAllInventory = {...state}\n            newAllInventory[newFields.warehouseId] = [...newAllInventory[newFields.warehouseId], newFields]\n            state = { ...newAllInventory }\n            return state;\n        }\n        case 'editItem': {\n            const { originalIds, newFields } = action.payload\n            const { originalPrimaryId, originalSecondaryId } = originalIds\n            const newAllInventory = {...state}\n            console.log(action.payload)\n            const itemIndex = newAllInventory[originalPrimaryId].findIndex(item => item.itemId === originalSecondaryId)\n            \n            const newInventoryDetail = [...newAllInventory[originalPrimaryId]]\n            newInventoryDetail[itemIndex] = {...newFields}\n\n            newAllInventory[originalPrimaryId] = [...newInventoryDetail]\n\n            state = {...newAllInventory}\n            return state;\n        }\n        case 'deleteItem': {\n            console.log(action.payload)\n            const { primaryId, secondaryId } = action.payload\n            const inventoryDetail = state[primaryId]\n            const newInventoryDetail = inventoryDetail.filter(item => item.itemId !== secondaryId)\n            state[primaryId] = newInventoryDetail\n            return state;\n        }\n        default:\n            return state;\n        }\n}\n\nexport default allInventoryReducer;","\nconst machines = require('../../mockData/machines.json');\n\nconst allMachinesReducer = (state = machines, action) => {\n    switch (action.type) {\n        case 'addMachine':{\n            console.log(action.payload)\n            const { newFields } = action.payload\n            const newAllInventory = {...state}\n            newAllInventory[newFields.factoryId] = [...newAllInventory[newFields.factoryId], newFields]\n            state = { ...newAllInventory }\n            return state;\n        }\n        case 'editMachine': {\n            console.log(action.payload)\n            const { originalIds, newFields } = action.payload\n            const { originalPrimaryId, originalSecondaryId } = originalIds\n            const newAllInventory = {...state}\n            const inventoryDetail = newAllInventory[originalPrimaryId]\n            const itemIndex = inventoryDetail.findIndex(item => item.machineId === originalSecondaryId)\n            \n            const newInventoryDetail = [...newAllInventory[originalPrimaryId]]\n            newInventoryDetail[itemIndex] = {...newFields}\n\n            newAllInventory[originalPrimaryId] = [...newInventoryDetail]\n\n            state = {...newAllInventory}\n            return state;\n        }\n        case 'deleteMachine': {\n            console.log(action.payload)\n            const { primaryId, secondaryId } = action.payload\n            const machineDetail = state[primaryId]\n            const newMachineDetail = machineDetail.filter(item => item.machineId !== secondaryId)\n            state[primaryId] = newMachineDetail\n            return state;\n        }\n        default:\n            return state;\n        }\n}\n\nexport default allMachinesReducer;","const factories = require('../../mockData/factories.json');\n\nconst factoryDetailReducer = (state = factories[0], action) => {\n    switch (action.type) {\n        case 'setFactoryDetail':\n            const { id, primaryData } = action.payload\n            return state = primaryData[id];\n        default:\n            return state;\n        }\n}\n\nexport default factoryDetailReducer;","const warehouses = require('../../mockData/warehouses.json');\n\nconst warehouseDetailReducer = (state = warehouses[0], action) => {\n    switch (action.type) {\n        case 'setWarehouseDetail':\n            const { id, primaryData } = action.payload\n            return state = primaryData[id];\n        default:\n            return state;\n        }\n}\n\nexport default warehouseDetailReducer;","const inventory = require('../../mockData/inventory.json');\n\nconst inventoryDetailReducer = (state = inventory[0], action) => {\n    switch (action.type) {\n        case 'addItem': {\n            console.log(action.payload)\n            const { newFields } = action.payload\n            const newState = [...state, newFields]\n            state = [...newState]\n            return state;\n        }\n        case 'editItem': {\n            console.log(action.payload)\n            const { originalIds, newFields } = action.payload\n            const newState = [...state]\n            const itemIndex = newState.findIndex(item => item.itemId === originalIds.originalSecondaryId)\n            newState[itemIndex] = {...newFields}\n            state = [...newState]\n            return state;\n        }\n        case 'deleteItem': {\n            console.log(action.payload)\n            const { secondaryId } = action.payload\n            const inventoryDetail = state\n            const newInventoryDetail = inventoryDetail.filter(item => item.itemId !== secondaryId)\n            state = newInventoryDetail\n            return state;\n        }\n        case 'setInventoryDetail': {\n            const { id, secondaryData } = action.payload\n            return state = secondaryData[id];\n        }\n        default:\n            return state;\n        }\n}\n\nexport default inventoryDetailReducer;","const machines = require('../../mockData/machines.json');\n\nconst machineDetailReducer = (state = machines[0], action) => {\n    switch (action.type) {\n        case 'addMachine': {\n            console.log(action.payload)\n            const { newFields } = action.payload\n            const newState = [...state, newFields]\n            state = [...newState]\n            return state;\n        }\n        case 'editMachine': {\n            console.log(action.payload)\n            const { originalIds, newFields } = action.payload\n            const newState = [...state]\n            const itemIndex = newState.findIndex(item => item.machineId === originalIds.originalSecondaryId)\n            newState[itemIndex] = {...newFields}\n            state = [...newState]\n            return state\n        };\n        case 'deleteMachine':{\n            console.log(action.payload)\n            const { secondaryId } = action.payload\n            const machineDetail = state\n            const newMachineDetail = machineDetail.filter(item => item.machineId !== secondaryId)\n            state = newMachineDetail\n            return state\n        };\n        case 'setMachineDetail': {\n            const { id, secondaryData } = action.payload\n            return state = secondaryData[id];\n        }\n        default:\n            return state;\n        }\n}\n\nexport default machineDetailReducer;","const activeDetailClassReducer = (state = true, action) => {\n    switch (action.type) {\n        default:\n            return !state;\n        }\n}\n\nexport default activeDetailClassReducer;","import allWarehousesReducer from './allWarehouses';\nimport allFactoriesReducer from './allFactories';\nimport allInventoryReducer from './allInventory';\nimport allMachinesReducer from './allMachines';\nimport factoryDetailReducer from './factoryDetail';\nimport warehouseDetailReducer from './warehouseDetail';\nimport inventoryDetailReducer from './inventoryDetail';\nimport machineDetailReducer from './machineDetail';\nimport activeDetailClassReducer from './activeDetailClass';\nimport { combineReducers } from 'redux';\n\nconst allReducers = combineReducers({\n    allWarehousesReducer,\n    allFactoriesReducer,\n    allInventoryReducer,\n    allMachinesReducer,\n    factoryDetailReducer,\n    warehouseDetailReducer,\n    inventoryDetailReducer,\n    machineDetailReducer,\n    activeDetailClassReducer\n})\n\nexport default allReducers;\n","import './App.css';\nimport Nav from './components/Nav';\nimport PageContainer from './components/PageContainer';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport pageConfigs from './pageConfigs';\nimport { createStore } from 'redux';\nimport allReducers from './redux/reducers';\nimport { Provider } from 'react-redux';\n\nfunction App() {\n\n// STORE -> GLOBALIZED STATE\nlet store = createStore(allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n\n  return (\n    <Provider store= {store}>\n      <Router>\n        <div className=\"App\">\n          <Nav pages={pageConfigs} />\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to=\"/warehouses\" />\n            </Route>\n            {pageConfigs.map(({ type, url }) => (\n              <Route\n                key={type} \n                path={url} \n                render={props => (\n                  <PageContainer { ...props } \n                    type={type} \n                  />)}\n              />))}\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}